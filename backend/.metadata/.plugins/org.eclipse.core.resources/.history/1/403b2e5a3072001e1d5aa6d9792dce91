package com.kick;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URI;
import java.net.URISyntaxException;
import java.net.URL;
import java.net.URLDecoder;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.imageio.ImageIO;
import javax.imageio.ImageReader;
import javax.imageio.stream.ImageOutputStream;

import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.hibernate.internal.build.AllowSysOut;
import org.junit.jupiter.api.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.edge.EdgeDriver;
import org.openqa.selenium.edge.EdgeOptions;
import org.openqa.selenium.support.ui.Select;
import org.postgresql.gss.GSSOutputStream;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.mock.web.MockMultipartFile;

import java.awt.AlphaComposite;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.RenderingHints;
import java.awt.image.BufferedImage;

@SpringBootTest
class SeleniumApplicationTests2 {
	private static final int IMG_WIDTH = 800;
    private static final int IMG_HEIGHT = 20000;
    
    
	@Test
	void contextLoads() throws IOException, InterruptedException {

        Path source = Paths.get("C:\\새 폴더 (2)\\산리오_카드도어범퍼 아크릴톡_헤드.png");
        Path target = Paths.get("C:\\새 폴더 (2)\\산리오_카드도어범퍼 아크릴톡_헤드.png");

        try (InputStream is = new FileInputStream(source.toFile())) {
            resize(is, target, IMG_WIDTH, IMG_HEIGHT);
        }
			
	}
	private static void resize(InputStream input, Path target,
            int width, int height) throws IOException {

		BufferedImage originalImage = ImageIO.read(input);
		
		/**
		* SCALE_AREA_AVERAGING
		* SCALE_DEFAULT
		* SCALE_FAST
		* SCALE_REPLICATE
		* SCALE_SMOOTH
		*/
		Image newResizedImage = originalImage
		.getScaledInstance(width, height, Image.SCALE_SMOOTH);
		
		String s = target.getFileName().toString();
		String fileExtension = s.substring(s.lastIndexOf(".") + 1);
		
		// we want image in png format
		ImageIO.write(convertToBufferedImage(newResizedImage),
		fileExtension, target.toFile());

	}
	
	public static BufferedImage convertToBufferedImage(Image img) {

        if (img instanceof BufferedImage) {
            return (BufferedImage) img;
        }

        // Create a buffered image with transparency
        BufferedImage bi = new BufferedImage(
                img.getWidth(null), img.getHeight(null),
                BufferedImage.TYPE_INT_ARGB);

        Graphics2D graphics2D = bi.createGraphics();
        graphics2D.drawImage(img, 0, 0, null);
        graphics2D.dispose();

        return bi;
    }
}

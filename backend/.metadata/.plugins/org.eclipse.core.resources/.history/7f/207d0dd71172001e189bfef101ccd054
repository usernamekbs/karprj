package com.kick;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URI;
import java.net.URISyntaxException;
import java.net.URL;
import java.net.URLDecoder;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.List;

import javax.imageio.ImageIO;
import javax.imageio.ImageReader;
import javax.imageio.stream.ImageOutputStream;

import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.hibernate.internal.build.AllowSysOut;
import org.junit.jupiter.api.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.edge.EdgeDriver;
import org.openqa.selenium.edge.EdgeOptions;
import org.openqa.selenium.support.ui.Select;
import org.postgresql.gss.GSSOutputStream;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.mock.web.MockMultipartFile;

import java.awt.Graphics2D;
import java.awt.image.BufferedImage;

@SpringBootTest
class SeleniumApplicationTests2 {
	private static final int IMG_WIDTH = 300;
    private static final int IMG_HEIGHT = 150;
    
    
	@Test
	void contextLoads() throws IOException, InterruptedException {
		
			
			/* 파일 정보와 리사이즈 값 정하는 메소드 */
		        File file = new File("C:\\test\\test.jpg");  //리사이즈할 파일 경로
		        InputStream inputStream = new FileInputStream(file);
		        Image img = new ImageIcon(file.toString()).getImage(); // 파일 정보 추출
		         
		        System.out.println("사진의 가로길이 : " + img.getWidth(null)); // 파일의 가로
		        System.out.println("사진의 세로길이 : " + img.getHeight(null)); // 파일의 세로
		        /* 파일의 길이 혹은 세로길이에 따라 if(분기)를 통해서 응용할 수 있습니다.
		         * '예를 들어 파일의 가로 해상도가 1000이 넘을 경우 1000으로 리사이즈 한다. 같은 분기' */
		        int width = 1280; // 리사이즈할 가로 길이
		        int height = 720; // 리사이즈할 세로 길이
		        
		        BufferedImage resizedImage = resize(inputStream ,width , height );
		        // 리사이즈 실행 메소드에 값을 넘겨준다.
		        ImageIO.write(resizedImage, "jpg", new File("C:\\test\\1234.jpg"));
		        // 리사이즈된 파일, 포맷, 저장할 파일경로
		    }
			
			/* 리사이즈 실행 메소드 */
		    public static BufferedImage resize(InputStream inputStream, int width, int height) 
		    		throws IOException {
		    	
		        BufferedImage inputImage = ImageIO.read(inputStream);  // 받은 이미지 읽기

		        BufferedImage outputImage = new BufferedImage(width, height, inputImage.getType());
		        // 입력받은 리사이즈 길이와 높이 

		        Graphics2D graphics2D = outputImage.createGraphics(); 
		        graphics2D.drawImage(inputImage, 0, 0, width, height, null); // 그리기
		        graphics2D.dispose(); // 자원해제

		        return outputImage;
		    }
	}
}
